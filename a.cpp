void setConsoleColor(int color);
void printColorTable();
void printStrRandomColor(const std::string& text);
std::string getSkinName(double skinFloat, int num);
std::vector<double> sortArray(const std::vector<double> &array);
Result findBestCombination(const std::vector<double> &numbers, double target);
Result findBestCombination(const std::vector<double> &numbers, double target, double aceitavel);
double calculateAverage(const std::vector<double> &array, int entries);
void writeCombinationToFile(const std::vector<double> &combination, const std::string &fileName, const std::string &logContent = "");
void writeSeparatorToFile(const std::string &barraN, const std::string &fileName, const std::string &logContent = "");
std::vector<double> getFirstN(const std::vector<double> &values, int N);
double getLastGood(const std::vector<double> &values, double target);
boolean isArrayGood(const std::vector<double> &values, double target);
unsigned long long binomialCoefficient(int n, int k);
std::vector<double> shuffleArray(std::vector<double> values);
double estimateExecutionTime(const std::vector<double> &values, double target, double aceitavel);
void printArray(const std::vector<double> &values);
std::string formatExecutionTime(double seconds);
void processCombination(const std::vector<double> &values, double target, int mode, double aceitavel = 0);
